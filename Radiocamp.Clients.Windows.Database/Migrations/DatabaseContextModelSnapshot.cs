// <auto-generated />
using System;
using Dartware.Radiocamp.Clients.Windows.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Dartware.Radiocamp.Clients.Windows.Database.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8");

            modelBuilder.Entity("Dartware.Radiocamp.Clients.Windows.Hotkeys.Hotkey", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("Command")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Key")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ModifierKey")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Hotkeys");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9dd2d805-05fd-4ef2-82d3-84c2cca25b87"),
                            Command = 1,
                            IsEnabled = false,
                            Key = 0,
                            ModifierKey = 0
                        },
                        new
                        {
                            Id = new Guid("8b3cfb20-2e4c-4876-8cc1-eb2e62ceaa63"),
                            Command = 2,
                            IsEnabled = false,
                            Key = 0,
                            ModifierKey = 0
                        },
                        new
                        {
                            Id = new Guid("58630aab-5c6a-44d1-b7f7-50ba66bdb6a9"),
                            Command = 3,
                            IsEnabled = false,
                            Key = 0,
                            ModifierKey = 0
                        },
                        new
                        {
                            Id = new Guid("0f58f832-3e97-4b99-9788-38573274ed16"),
                            Command = 4,
                            IsEnabled = false,
                            Key = 0,
                            ModifierKey = 0
                        },
                        new
                        {
                            Id = new Guid("4fa187f2-2dad-49ca-9ba4-792313ca573d"),
                            Command = 5,
                            IsEnabled = false,
                            Key = 0,
                            ModifierKey = 0
                        },
                        new
                        {
                            Id = new Guid("3d908afa-3c03-4744-8b9b-264ba0fd3e1d"),
                            Command = 6,
                            IsEnabled = false,
                            Key = 0,
                            ModifierKey = 0
                        });
                });

            modelBuilder.Entity("Dartware.Radiocamp.Clients.Windows.Settings.Settings", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("AlwaysShowTrayIcon")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ExportRadiostationsAll")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ExportRadiostationsCustomOnly")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ExportRadiostationsFavoritesOnly")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ExportRadiostationsFormat")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ExportRadiostationsOnlyFavoritesOrCustom")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ExportRadiostationsPath")
                        .HasColumnType("TEXT");

                    b.Property<bool>("ExportRadiostationsSaveFavoritesTags")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ExportRadiostationsSaveSoundSettings")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("HideApplicationOnCloseButtonClick")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("HideApplicationOnMinimizeButtonClick")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("HotkeysIsEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsNightMode")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Localization")
                        .HasColumnType("INTEGER");

                    b.Property<double>("MainWindowCompactAdvancedHeight")
                        .HasColumnType("REAL");

                    b.Property<double>("MainWindowHeight")
                        .HasColumnType("REAL");

                    b.Property<double>("MainWindowLeft")
                        .HasColumnType("REAL");

                    b.Property<int>("MainWindowMode")
                        .HasColumnType("INTEGER");

                    b.Property<double>("MainWindowTop")
                        .HasColumnType("REAL");

                    b.Property<double>("MainWindowWidth")
                        .HasColumnType("REAL");

                    b.Property<int>("SearchEngine")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ShowFavoritesAtStart")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ShowOnlyCustomAtStart")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("StartMinimized")
                        .HasColumnType("INTEGER");

                    b.Property<int>("VolumeStep")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Settings");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6344adc9-7e7e-4474-be03-80dbeea1fbe6"),
                            AlwaysShowTrayIcon = true,
                            ExportRadiostationsAll = true,
                            ExportRadiostationsCustomOnly = false,
                            ExportRadiostationsFavoritesOnly = false,
                            ExportRadiostationsFormat = 0,
                            ExportRadiostationsOnlyFavoritesOrCustom = false,
                            ExportRadiostationsSaveFavoritesTags = true,
                            ExportRadiostationsSaveSoundSettings = true,
                            HideApplicationOnCloseButtonClick = true,
                            HideApplicationOnMinimizeButtonClick = false,
                            HotkeysIsEnabled = false,
                            IsNightMode = false,
                            Localization = 0,
                            MainWindowCompactAdvancedHeight = 0.0,
                            MainWindowHeight = 0.0,
                            MainWindowLeft = 0.0,
                            MainWindowMode = 0,
                            MainWindowTop = 0.0,
                            MainWindowWidth = 0.0,
                            SearchEngine = 0,
                            ShowFavoritesAtStart = false,
                            ShowOnlyCustomAtStart = false,
                            StartMinimized = false,
                            VolumeStep = 4
                        });
                });
#pragma warning restore 612, 618
        }
    }
}

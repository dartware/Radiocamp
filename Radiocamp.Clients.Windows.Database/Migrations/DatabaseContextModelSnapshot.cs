// <auto-generated />
using System;
using Dartware.Radiocamp.Clients.Windows.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Dartware.Radiocamp.Clients.Windows.Database.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8");

            modelBuilder.Entity("Dartware.Radiocamp.Clients.Windows.Hotkeys.Hotkey", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("Command")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Key")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ModifierKey")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Hotkeys");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e8d20d28-5149-47dc-94b9-f01e950193c4"),
                            Command = 1,
                            IsEnabled = false,
                            Key = 0,
                            ModifierKey = 0
                        },
                        new
                        {
                            Id = new Guid("1089ebfd-da22-4eb9-90e0-b33649e80b94"),
                            Command = 2,
                            IsEnabled = false,
                            Key = 0,
                            ModifierKey = 0
                        },
                        new
                        {
                            Id = new Guid("aae24729-b45d-4b11-820e-d1f3166f39b6"),
                            Command = 3,
                            IsEnabled = false,
                            Key = 0,
                            ModifierKey = 0
                        },
                        new
                        {
                            Id = new Guid("bec46260-ab7d-4c72-9d6c-0d16478fd7bd"),
                            Command = 4,
                            IsEnabled = false,
                            Key = 0,
                            ModifierKey = 0
                        },
                        new
                        {
                            Id = new Guid("a2dd329b-0746-44df-9471-12a5defda4ea"),
                            Command = 5,
                            IsEnabled = false,
                            Key = 0,
                            ModifierKey = 0
                        },
                        new
                        {
                            Id = new Guid("e49b507f-b99c-41b2-9ee9-07c09276b237"),
                            Command = 6,
                            IsEnabled = false,
                            Key = 0,
                            ModifierKey = 0
                        });
                });

            modelBuilder.Entity("Dartware.Radiocamp.Clients.Windows.Settings.Settings", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("AlwaysShowTrayIcon")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ExportRadiostationsAll")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ExportRadiostationsCustomOnly")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ExportRadiostationsFavoritesOnly")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ExportRadiostationsFormat")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ExportRadiostationsOnlyFavoritesOrCustom")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ExportRadiostationsPath")
                        .HasColumnType("TEXT");

                    b.Property<bool>("ExportRadiostationsSaveFavoritesTags")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ExportRadiostationsSaveSoundSettings")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("HideApplicationOnCloseButtonClick")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("HideApplicationOnMinimizeButtonClick")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("HideInTaskbar")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("HideInTaskbarOnlyCompact")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("HotkeysIsEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsNightMode")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Localization")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MainWindowAdvancedCompactPosition")
                        .HasColumnType("INTEGER");

                    b.Property<double>("MainWindowCompactAdvancedHeight")
                        .HasColumnType("REAL");

                    b.Property<double>("MainWindowHeight")
                        .HasColumnType("REAL");

                    b.Property<double>("MainWindowLeft")
                        .HasColumnType("REAL");

                    b.Property<int>("MainWindowMode")
                        .HasColumnType("INTEGER");

                    b.Property<double>("MainWindowTop")
                        .HasColumnType("REAL");

                    b.Property<bool>("MainWindowTopmost")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("MainWindowTopmostOnlyCompact")
                        .HasColumnType("INTEGER");

                    b.Property<double>("MainWindowWidth")
                        .HasColumnType("REAL");

                    b.Property<int>("SearchEngine")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ShowFavoritesAtStart")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ShowOnlyCustomAtStart")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("StartMinimized")
                        .HasColumnType("INTEGER");

                    b.Property<int>("VolumeStep")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Settings");

                    b.HasData(
                        new
                        {
                            Id = new Guid("300a50e2-9829-44aa-aca5-3570e6261b57"),
                            AlwaysShowTrayIcon = true,
                            ExportRadiostationsAll = true,
                            ExportRadiostationsCustomOnly = false,
                            ExportRadiostationsFavoritesOnly = false,
                            ExportRadiostationsFormat = 0,
                            ExportRadiostationsOnlyFavoritesOrCustom = false,
                            ExportRadiostationsSaveFavoritesTags = true,
                            ExportRadiostationsSaveSoundSettings = true,
                            HideApplicationOnCloseButtonClick = true,
                            HideApplicationOnMinimizeButtonClick = false,
                            HideInTaskbar = false,
                            HideInTaskbarOnlyCompact = false,
                            HotkeysIsEnabled = false,
                            IsNightMode = false,
                            Localization = 0,
                            MainWindowAdvancedCompactPosition = 0,
                            MainWindowCompactAdvancedHeight = 400.0,
                            MainWindowHeight = 0.0,
                            MainWindowLeft = 0.0,
                            MainWindowMode = 0,
                            MainWindowTop = 0.0,
                            MainWindowTopmost = false,
                            MainWindowTopmostOnlyCompact = false,
                            MainWindowWidth = 0.0,
                            SearchEngine = 0,
                            ShowFavoritesAtStart = false,
                            ShowOnlyCustomAtStart = false,
                            StartMinimized = false,
                            VolumeStep = 4
                        });
                });

            modelBuilder.Entity("Dartware.Radiocamp.Core.Models.Radiostation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("Country")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateOfCreation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("datetime('now')");

                    b.Property<int>("Genre")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsCustom")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsFavorite")
                        .HasColumnType("INTEGER");

                    b.Property<string>("StreamURL")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Radiostations");
                });
#pragma warning restore 612, 618
        }
    }
}

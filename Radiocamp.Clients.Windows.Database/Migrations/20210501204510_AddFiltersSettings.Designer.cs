// <auto-generated />
using System;
using Dartware.Radiocamp.Clients.Windows.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Dartware.Radiocamp.Clients.Windows.Database.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20210501204510_AddFiltersSettings")]
    partial class AddFiltersSettings
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.5");

            modelBuilder.Entity("Dartware.Radiocamp.Clients.Windows.Core.Models.WindowsRadiostation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("Country")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateOfCreation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("datetime('now')");

                    b.Property<int>("Genre")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsCurrent")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsCustom")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsFavorite")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsPinned")
                        .HasColumnType("INTEGER");

                    b.Property<string>("StreamURL")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.Property<double>("Volume")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("Radiostations");
                });

            modelBuilder.Entity("Dartware.Radiocamp.Clients.Windows.Hotkeys.Hotkey", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("Command")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Key")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ModifierKey")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Hotkeys");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ab4e246b-1c68-429e-af76-68a0d5fd779c"),
                            Command = 1,
                            IsEnabled = false,
                            Key = 0,
                            ModifierKey = 0
                        },
                        new
                        {
                            Id = new Guid("2902bd00-21df-47be-a236-c1dcc6d11204"),
                            Command = 2,
                            IsEnabled = false,
                            Key = 0,
                            ModifierKey = 0
                        },
                        new
                        {
                            Id = new Guid("3f5b171b-1606-44ad-b1b2-e3cd64d04acd"),
                            Command = 3,
                            IsEnabled = false,
                            Key = 0,
                            ModifierKey = 0
                        },
                        new
                        {
                            Id = new Guid("3767a3d1-320e-4614-b917-27fee2c3a902"),
                            Command = 4,
                            IsEnabled = false,
                            Key = 0,
                            ModifierKey = 0
                        },
                        new
                        {
                            Id = new Guid("c23505fc-0930-4f22-8192-367da593be4b"),
                            Command = 5,
                            IsEnabled = false,
                            Key = 0,
                            ModifierKey = 0
                        },
                        new
                        {
                            Id = new Guid("198c5cc4-4976-4935-9bb0-8579d91405e9"),
                            Command = 6,
                            IsEnabled = false,
                            Key = 0,
                            ModifierKey = 0
                        });
                });

            modelBuilder.Entity("Dartware.Radiocamp.Clients.Windows.Settings.Settings", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("AlwaysShowTrayIcon")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Country")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ExportRadiostationsAll")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ExportRadiostationsCustomOnly")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ExportRadiostationsFavoritesOnly")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ExportRadiostationsFormat")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ExportRadiostationsOnlyFavoritesOrCustom")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ExportRadiostationsPath")
                        .HasColumnType("TEXT");

                    b.Property<bool>("ExportRadiostationsSaveFavoritesTags")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ExportRadiostationsSaveSoundSettings")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Genre")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("HideApplicationOnCloseButtonClick")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("HideApplicationOnMinimizeButtonClick")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("HideInTaskbar")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("HideInTaskbarOnlyCompact")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("HotkeysIsEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsCustomOnly")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsNightMode")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Localization")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MainWindowAdvancedCompactPosition")
                        .HasColumnType("INTEGER");

                    b.Property<double>("MainWindowCompactAdvancedHeight")
                        .HasColumnType("REAL");

                    b.Property<double>("MainWindowHeight")
                        .HasColumnType("REAL");

                    b.Property<double>("MainWindowLeft")
                        .HasColumnType("REAL");

                    b.Property<int>("MainWindowMode")
                        .HasColumnType("INTEGER");

                    b.Property<double>("MainWindowTop")
                        .HasColumnType("REAL");

                    b.Property<bool>("MainWindowTopmost")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("MainWindowTopmostOnlyCompact")
                        .HasColumnType("INTEGER");

                    b.Property<double>("MainWindowWidth")
                        .HasColumnType("REAL");

                    b.Property<int>("SearchEngine")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ShowFavoritesAtStart")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ShowOnlyCustomAtStart")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ShowOnlyFavorites")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SortingType")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("StartMinimized")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Volume")
                        .HasColumnType("REAL");

                    b.Property<int>("VolumeStep")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Settings");

                    b.HasData(
                        new
                        {
                            Id = new Guid("deb32f01-5d30-4bc2-aa29-ef7406b14672"),
                            AlwaysShowTrayIcon = true,
                            Country = 0,
                            ExportRadiostationsAll = true,
                            ExportRadiostationsCustomOnly = false,
                            ExportRadiostationsFavoritesOnly = false,
                            ExportRadiostationsFormat = 0,
                            ExportRadiostationsOnlyFavoritesOrCustom = false,
                            ExportRadiostationsSaveFavoritesTags = true,
                            ExportRadiostationsSaveSoundSettings = true,
                            Genre = 0,
                            HideApplicationOnCloseButtonClick = true,
                            HideApplicationOnMinimizeButtonClick = false,
                            HideInTaskbar = false,
                            HideInTaskbarOnlyCompact = false,
                            HotkeysIsEnabled = false,
                            IsCustomOnly = false,
                            IsNightMode = false,
                            Localization = 0,
                            MainWindowAdvancedCompactPosition = 0,
                            MainWindowCompactAdvancedHeight = 400.0,
                            MainWindowHeight = 0.0,
                            MainWindowLeft = 0.0,
                            MainWindowMode = 0,
                            MainWindowTop = 0.0,
                            MainWindowTopmost = false,
                            MainWindowTopmostOnlyCompact = false,
                            MainWindowWidth = 0.0,
                            SearchEngine = 0,
                            ShowFavoritesAtStart = false,
                            ShowOnlyCustomAtStart = false,
                            ShowOnlyFavorites = false,
                            SortingType = 0,
                            StartMinimized = false,
                            Volume = 50.0,
                            VolumeStep = 4
                        });
                });
#pragma warning restore 612, 618
        }
    }
}

<views:View x:Class="Dartware.Radiocamp.Clients.Windows.Views.HotkeyItem"
            xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
            xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
            xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
            xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
            xmlns:vm="clr-namespace:Dartware.Radiocamp.Clients.Windows.ViewModels"
            xmlns:views="clr-namespace:Dartware.Radiocamp.Clients.Windows.Views"
            xmlns:controls="clr-namespace:Dartware.Radiocamp.Clients.Windows.UI.Controls;assembly=Radiocamp.Clients.Windows.UI"
            mc:Ignorable="d"
            d:DataContext="{d:DesignInstance vm:HotkeyItemViewModel}">
	
	<UserControl.Resources>
		<Style TargetType="{x:Type views:HotkeyItem}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type views:HotkeyItem}">

						<Border x:Name="Border"
								Padding="16 8"
								Background="Transparent">
							<Grid>

								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto"/>
									<ColumnDefinition Width="*"/>
									<ColumnDefinition Width="Auto"/>
									<ColumnDefinition Width="Auto"/>
									<ColumnDefinition Width="Auto"/>
								</Grid.ColumnDefinitions>

								<CheckBox Grid.Column="0"
								          VerticalAlignment="Center"
										  Margin="0"
										  IsEnabled="{Binding IsEnabledCheckBoxEnabled, Mode=OneWay}"
										  IsChecked="{Binding IsEnabled, Mode=TwoWay}"/>

								<controls:LocalizationTextBlock Grid.Column="1"
																VerticalAlignment="Center"
																Margin="0 0 0 0"
								                                LocalizationText="{Binding Command, Mode=OneWay}"/>

								<controls:HotkeyLabel Grid.Column="2"
								                      Margin="0"
								                      VerticalAlignment="Center"
													  Background="{DynamicResource Warning}"
													  Padding="10 5"
													  Foreground="Black"
								                      Key="{Binding Key, Mode=OneWay}"
								                      ModifierKey="{Binding ModifierKey, Mode=OneWay}"/>

								<controls:IconButton Grid.Column="3"
								                     VerticalAlignment="Center"
								                     Margin="6 0 0 0"
													 FontSize="17"
								                     Command="{Binding EditCommand}"
								                     Content="{DynamicResource EditIcon}"/>

								<controls:IconButton Grid.Column="4"
								                     VerticalAlignment="Center"
								                     Margin="3 0 0 0"
													 FontSize="18"
													 Command="{Binding RemoveCommand}"
								                     Content="{DynamicResource RemoveIcon}"/>

							</Grid>
						</Border>

						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter TargetName="Border" Property="Background" Value="{DynamicResource WindowOver}"/>
							</Trigger>
						</ControlTemplate.Triggers>

					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
	</UserControl.Resources>

</views:View>